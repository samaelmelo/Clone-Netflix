{"version":3,"sources":["Tmdb.js","components/MovieRow.js","components/FeaturedMovie.js","components/Header/Header.js","App.js","index.js"],"names":["basicFetch","endpoint","a","fetch","req","json","languageAndAPI","getHomeList","slug","title","items","getMovieInfo","movieId","type","info","MovieRow","useState","scrollx","setScrollx","className","onClick","x","Math","round","window","innerWidth","style","fontSize","listWidth","results","length","marginLeft","width","map","item","key","src","poster_path","alt","original_title","FeaturedMovie","firstDate","Date","first_air_date","genres","name","description","overview","substring","backgroundImage","backdrop_path","original_name","vote_average","getFullYear","number_of_seasons","href","id","join","Header","black","App","movieList","setMovieList","featureData","setFeatureData","blackHeader","setBlackHeader","useEffect","loadAll","list","originals","filter","i","randomChosen","floor","random","chosen","chosenInfo","scrollListener","scrollY","addEventListener","removeEventListener","target","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b7c1929a.chunk.js","sourcesContent":["const API_KEY = '314abce9999f633d69261bae3141a24e'\nconst API_BASE = 'https://api.themoviedb.org/3'\n\n/*\n pegar os :\n -originais da netflix\n -recomendados (trending)\n -em alta (top rated)\n -ação\n -romance\n -terror\n -documentação\n*/ \n\nconst basicFetch = async (endpoint) => {\n  const req = await fetch(`${API_BASE}${endpoint}`)\n  const json = await req.json()\n  return json\n}\n\nconst languageAndAPI = `language=pt-BR&api_key=${API_KEY}`\n\n\nexport default async function getHomeList() {\n  return [\n    {\n      slug: 'originals',\n      title: 'Originais da Netflix',\n      items: await basicFetch(`/discover/tv?with_network=213&${languageAndAPI}`),\n    },\n\n    {\n      slug: 'trendings',\n      title: 'Recomentados para você',\n      items: await basicFetch(`/trending/all/week?${languageAndAPI}`),\n    },\n\n    {\n      slug: 'toprated',\n      title: 'Em Alta',\n      items: await basicFetch(`/movie/top_rated?${languageAndAPI}`),\n    },\n    {\n      slug: 'Action',\n      title: 'Ação',\n      items: await basicFetch(`/discover/movie?with_genres=28&${languageAndAPI}`),\n    },\n    {\n      slug: 'Comedy',\n      title: 'Comédia',\n      items: await basicFetch(`/discover/movie?with_genres=35&${languageAndAPI}`),\n    },\n    {\n      slug: 'Horror',\n      title: 'Terror',\n      items: await basicFetch(`/discover/movie?with_genres=27&${languageAndAPI}`),\n    },\n    {\n      slug: 'Romance',\n      title: 'Romance',\n      items: await basicFetch(`/discover/movie?with_genres=10749&${languageAndAPI}`),\n    },\n    {\n      slug: 'Documentary',\n      title: 'Documentario',\n      items: await basicFetch(`/discover/movie?with_genres=99&${languageAndAPI}`),\n    },\n  ]\n} \n\nexport async function getMovieInfo(movieId,type) {\n  let info = { }\n\n  if(movieId){\n     if(type === 'movie'){\n        info = await basicFetch(`/movie/${movieId}?${languageAndAPI}`)\n     }else if(type === 'tv'){\n        info = await basicFetch(`/tv/${movieId}?${languageAndAPI}`)\n     }\n  }\n\n  return  info;\n}\n\n\n\n\n\n\n\n","import React, {useState} from \"react\";\nimport NavigateBefore from \"@material-ui/icons/NavigateBefore\"\nimport NavigateAfter from \"@material-ui/icons/NavigateNext\"\n\nimport './MovieRow.css'\n\n\nexport default function MovieRow({title, items}) {\n  const [scrollx, setScrollx] = useState(-400)\n\n  const handleLeftArrow = () => {\n    let x = scrollx + Math.round( window.innerWidth / 2);\n    \n    if(x > 0){\n      x = 0\n    }\n    setScrollx(x)\n\n  }\n  const handleRightArrow = () => {\n\n    let x = scrollx - Math.round( window.innerWidth / 2);\n    let listWidth = items.results.length * 160\n    if((window.innerWidth - listWidth) > x){\n      x = (window.innerWidth - listWidth) - 60\n    }\n\n    setScrollx(x)\n  }\n\n\n  return (\n    <div className='movie-row'> \n        <h2>{title}</h2>\n\n        <div className=\"movie-row-left\" onClick={handleLeftArrow}>\n            <NavigateBefore style={{fontSize: '2rem'}} />\n        </div>\n        <div className=\"movie-row-right\" onClick={handleRightArrow}>\n            <NavigateAfter style={{fontSize: '2rem'}} />\n        </div>\n\n        <div className='movie-row-list-area'>\n              <div className='movieRow-list' \n                    style={\n                          {\n                            marginLeft: scrollx,\n                            width: items.results.length * 160,\n                          }\n                        }>\n                   {items.results.length > 0 && items.results.map( (item, key) => (\n\n                    <div key={key} className='movie-row-item'>\n                       <img src={`https://image.tmdb.org/t/p/w300${item.poster_path}`} alt={item.original_title}/>\n\n                     </div>\n                ) )}\n\n              </div>\n\n\n          \n\n        </div>\n    </div>\n  )\n}","import React from \"react\";\nimport './FeaturedMovie.css';\nexport default function FeaturedMovie({item}){\n  \n\n  let firstDate = new Date(item.first_air_date)\n \n  let genres = item.genres.map( item => item.name)\n  \n  let description = item.overview\n  if(description.length > 250){\n    description = description.substring(0, 200)+'...'\n  }\n\n  return(\n    <section className='featured' style={{\n      backgroundImage: `url(http://image.tmdb.org/t/p/original${item.backdrop_path})`\n    }}>\n        <div className='featured-vertical'>\n          <div className=\"featured-horizontal\">\n              <h1 className=\"featured-name\">{item.original_name}</h1>\n              <div className=\"featured-info\">\n                  <span className=\"featured-points\">\n                    {item.vote_average} pontos\n                  </span>\n                  <span className=\"featured-year\">{firstDate.getFullYear()}</span>\n                  <span className=\"featured-seasons\">{item.number_of_seasons} temporada{item.number_of_seasons !== 1 ? 's' : ''}</span>\n              </div>\n\n              <h3 className=\"featured-description\" >{description}</h3>\n\n              <div className=\"featured-buttons\">\n                <a href={`/watch/${item.id}`} className='featured-watchButton'>► Assitir</a>\n                <a href={`/list/add/${item.id}`} className='featured-MyListButton'>+ Minha Lista</a>\n              </div>\n\n              <span className=\"featured-genres\">\n                <strong>Gêneros:</strong> {genres.join(', ')}\n              </span>\n          </div>\n\n        </div>\n    </section>\n  )\n}","import React from 'react'\nimport './Header.css'\n\nexport default function Header ({black}){\n    return(\n      <header className={black ? 'black' : '' }>\n          <div className='header-logo'>\n              <a href=\"/\">\n                <img src=\"https://assets.stickpng.com/images/580b57fcd9996e24bc43c529.png\" alt=\"Logo Netflix\" />\n              </a>\n          </div>\n          <div className='header-user'>\n              <a href=\"/\">\n                <img src=\"https://upload.wikimedia.org/wikipedia/commons/0/0b/Netflix-avatar.png\" alt=\"Usuario\" />\n              </a>\n          </div>\n      </header>\n    )\n}\n\n\n\n","import React, { useState, useEffect } from 'react'\nimport getHomeList from './Tmdb'\nimport { getMovieInfo } from './Tmdb'\nimport MovieRow from './components/MovieRow'\nimport FeaturedMovie from './components/FeaturedMovie'\nimport Header from './components/Header/Header'\n\nimport './App.css'\n\nfunction App() {\n  const [movieList, setMovieList] = useState([])\n  const [featureData, setFeatureData] = useState(null)\n  const [blackHeader, setBlackHeader] = useState(false)\n\n  useEffect(() => {\n    const loadAll = async () => {\n      let list = await getHomeList()\n      setMovieList(list)\n\n      // PEGANDO O FEATURED\n      let originals = list.filter(i => i.slug === 'originals')\n      let randomChosen = Math.floor(\n        Math.random() * originals[0].items.results.length - 1\n      )\n      let chosen = originals[0].items.results[randomChosen]\n      let chosenInfo = await getMovieInfo(chosen.id, 'tv')\n      setFeatureData(chosenInfo)\n    }\n\n    loadAll()\n  }, [])\n\n  useEffect(() => {\n    const scrollListener = () => {\n      window.scrollY > 25 ? setBlackHeader(true) : setBlackHeader(false)\n    }\n\n    window.addEventListener('scroll', scrollListener)\n\n    return () => {\n      window.removeEventListener('scroll', scrollListener)\n\n    }\n  }, [])\n\n  \n\n  return (\n    <div className=\"page\">\n      <Header black={blackHeader} />\n\n      {/* quando deixar de ser nulo, quando existir mostra o componente */}\n      {featureData && <FeaturedMovie item={featureData} />}\n\n      <sections className=\"lists\">\n        {movieList.map((item, key) => (\n          <MovieRow key={key} title={item.title} items={item.items} />\n        ))}\n      </sections>\n\n      <footer>\n        <p>\n          Feito por\n          <a href=\"https://samaeldev.herokuapp.com\" target=\"blank\">\n            Samael Melo\n          </a>\n        </p>\n        <p>Direitos de imagem Netflix</p>\n        <p>Dados importados do site Themoviedv.org</p>\n      </footer>\n\n      {movieList.length <= 0 &&\n\n      <div className='loading'>\n        <img\n          src=\"https://1.bp.blogspot.com/-B9juta27w6o/Xzk4GGrOziI/AAAAAAABtpE/0OMhU_0hPTY7PhayDfL3eJ5mIc2csWWWwCLcBGAsYHQ/s1600/Netflix_LoadTime.gif\"\n          alt=\"Carregando\"\n        />\n      </div>\n      }\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}